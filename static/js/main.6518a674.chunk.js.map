{"version":3,"sources":["serviceWorker.js","index.js","App.js"],"names":["Boolean","window","location","hostname","match","Global","createGlobalStyle","ReactDOM","render","App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","CalcAppComponent","styled","div","PointsElement","Points","strong","Equation","Number","Sign","b","Input","input","rewardAnimation","keyframes","Reward","props","preview","css","CalcApp","state","firstNumber","secondNumber","result","maxValue","sign","good","level","negativeNumbers","randomNumbers","Math","round","random","freeSpace","log","ceil","eval","setState","check","e","parseInt","target","value","setTimeout","this","toString","replace","x","id","onChange","type","onClick","Component"],"mappings":"wLAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oaCXN,IAAMC,EAASC,YAAH,KAmBZC,IAASC,OACR,oCACC,kBAACH,EAAD,MACA,kBAACI,EAAA,EAAD,OAEDC,SAASC,eAAe,SDoGnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,owLEjI5B,IAAMC,iBAAmBC,iDAAOC,IAAV,mBAUhBC,cAAgBF,iDAAOC,IAAV,oBAGbE,OAASH,iDAAOI,OAAV,oBAGNC,SAAWL,iDAAOC,IAAV,oBAORK,OAASN,iDAAOI,OAAV,oBAING,KAAOP,iDAAOQ,EAAV,oBAEJC,MAAQT,iDAAOU,MAAV,oBAgBLC,gBAAkBC,yDAAH,oBAkBfC,OAASb,iDAAOC,IAAV,mBAUEU,iBACX,SAAAG,GAAK,OACNA,EAAMC,SACNC,yDADA,wBAMIC,Q,ysBACLC,MAAQ,CACPC,YAAa,KACbC,aAAc,KACdC,OAAQ,KACRC,SAAU,IACVC,KAAM,IACNC,MAAM,EACNC,MAAO,EACPC,iBAAiB,G,MAKlBC,cAAgB,WACf,IAAMR,YAAcS,KAAKC,OAAOD,KAAKE,SAAW,IAAO,MAAKZ,MAAMI,UAC9DS,UAAY,EACS,IAArB,MAAKb,MAAMO,MACdM,UAAY,MAAKb,MAAMI,SAAW,EAEL,IAArB,MAAKJ,MAAMO,MACnBM,UAAY,MAAKb,MAAMI,SAEM,IAArB,MAAKJ,MAAMO,QACnBM,UAAY,MAAKb,MAAMI,SAAWH,aAEnCtB,QAAQmC,IAAID,WACZ,IAAMX,aAAeQ,KAAKK,MAAML,KAAKE,SAAW,IAAOC,WACjDV,OAASa,KAAK,eAAD,OAAgB,MAAKhB,MAAMK,KAA3B,kBACnB,MAAKY,SAAS,CAAChB,wBAAaC,0BAAcC,iB,MAE3Ce,MAAQ,SAACC,GACLC,SAASD,EAAEE,OAAOC,SAAW,MAAKtB,MAAMG,SAC1C,MAAKc,SAAS,CAACX,MAAM,IACrB3B,QAAQmC,IAAI,WACZS,YAAW,WACVtD,SAASC,eAAe,SAASoD,MAAQ,GACzC,MAAKL,SAAS,CAACX,MAAM,IACrB,MAAKG,kBACH,O,iWA3BJe,KAAKf,kB,+BA+Ba3B,iDAAOC,IAAV,qBAWX,SAAAa,GAAK,OACNA,EAAMC,SACNC,yDADA,wBAOH,OACC,2DAACjB,iBAAD,KACC,2DAACG,cAAD,gBAAuB,2DAACC,OAAD,YACvB,2DAACE,SAAD,KACC,2DAACC,OAAD,KAASoC,KAAKxB,MAAMC,aACpB,2DAACZ,KAAD,KAAOmC,KAAKxB,MAAMK,MAClB,2DAACjB,OAAD,KAAUoC,KAAKxB,MAAME,aAAoBsB,KAAKxB,MAAME,aAAauB,WAAWC,QAAQ,YAAY,SAAAC,GAAC,iBAAQA,EAAR,QAA7D,IACpC,2DAACtC,KAAD,UACA,2DAACE,MAAD,CAAOqC,GAAG,QAAQC,SAAUL,KAAKN,MAAOY,KAAK,YAE9C,sEACC,2DAAC1C,OAAD,KAASoC,KAAKxB,MAAMG,QACpB,qEAAQ4B,QAASP,KAAKf,eAAtB,WAED,2DAACd,OAAD,CAAQE,QAAS2B,KAAKxB,MAAMM,Y,SA5EV0B,8CA8FPjC,+B","file":"static/js/main.6518a674.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst Global = createGlobalStyle`\n\t* {\n\t\t--color-main: lightgreen;\n\t\t--color-decorative: gold;\n\t\t--color-primary: lightgray;\n\t\t--color-secondary: gray;\n\t\t--color-bg: #202020;\n\t\tbox-sizing: border-box;\n\t\t::after,\n\t\t::before {\n\t\t\tbox-sizing: border-box;\n\t\t}\n\t}\n\tbody {\n\t\tbackground-color: var(--color-bg);\n\t\tcolor: var(--color-primary);\n\t}\n`\n\nReactDOM.render(\n\t<>\n\t\t<Global />\n\t\t<App />\n\t</>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// BASIC\nimport React, { Component } from 'react'\nimport styled, {css, keyframes} from 'styled-components'\nimport Lottie from 'react-lottie';\n// import rewardAnimation from './Components/Data/433-checked-done.json'\n\n/*eslint-disable no-eval */\n\nconst CalcAppComponent = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n\talign-items: center;\n\tflex-direction: column;\n\twidth: 100vw;\n\theight: 100vh;\n\tpadding: 30px;\n\tfont-size: 30px;\n`\nconst PointsElement = styled.div`\n\n`\nconst Points = styled.strong`\n\tcolor: var(--color-decorative);\n`\nconst Equation = styled.div`\n\tmax-width: 400px;\n\twidth: 100vw;\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n\talign-items: center;\n`\nconst Number = styled.strong`\n\tcolor: var(--color-main);\n\tmargin: 10px;\n`\nconst Sign = styled.b``\n\nconst Input = styled.input`\n\twidth: 100px;\n\tbackground-color: transparent;\n\tpadding: 10px;\n\tmargin: 10px;\n\tfont-size: 30px;\n\tfont-weight: bold;\n\ttext-align: center;\n\tcolor: var(--color-primary);\n\tborder: 1px solid var(--color-secondary);\n\tborder-radius: 20px;\n\toutline: none;\n\t::-webkit-inner-spin-button {\n\t\t-webkit-appearance: none;\n\t}\n`\nconst rewardAnimation = keyframes`\n\t0% {\n\t\ttransform: translate(-50%, -50%) scale(0.5);\n\t\topacity: 0;\n\t}\n\t50% {\n\t\ttransform: translate(-50%, -80px) scale(1);\n\t\topacity: 1;\n\t}\n\t/* 60% {\n\t\ttransform: translate(-10vh, -20vh) scale(0.5);\n\t\topacity: 1;\n\t} */\n\t100% {\n\t\ttransform: translate(30px, -50vh) scale(0);\n\t\topacity: 0;\n\t}\n`\nconst Reward = styled.div`\n\tdisplay: none;\n\tposition: absolute;\n\ttop: 50%;\n\tleft: 50%;\n\ttransform: translate(-50%, -50%);\n\twidth: 50px;\n\theight: 50px;\n\tbackground-color: var(--color-decorative);\n\tborder-radius: 100%;\n\tanimation: ${rewardAnimation} 0.8s both;\n\t${props =>\n\t\tprops.preview &&\n\t\tcss`\n\t\t\tdisplay: block;\n\t\t`\n\t};\n`\nclass CalcApp extends Component {\n\tstate = {\n\t\tfirstNumber: null,\n\t\tsecondNumber: null,\n\t\tresult: null,\n\t\tmaxValue: 100,\n\t\tsign: '-',\n\t\tgood: false,\n\t\tlevel: 1,\n\t\tnegativeNumbers: true\n\t}\n\tcomponentDidMount() {\n\t\tthis.randomNumbers();\n\t}\n\trandomNumbers = () => {\n\t\tconst firstNumber = Math.round((Math.random() - 0.5) * this.state.maxValue);\n\t\tlet freeSpace = 0;\n\t\tif (this.state.level === 1) {\n\t\t\tfreeSpace = this.state.maxValue / 2;\n\t\t}\n\t\telse if (this.state.level === 2) {\n\t\t\tfreeSpace = this.state.maxValue;\n\t\t}\n\t\telse if (this.state.level === 3) {\n\t\t\tfreeSpace = this.state.maxValue - firstNumber;\n\t\t}\n\t\tconsole.log(freeSpace);\n\t\tconst secondNumber = Math.ceil((Math.random() - 0.5) * freeSpace);\n\t\tconst result = eval(`firstNumber ${this.state.sign} secondNumber`);\n\t\tthis.setState({firstNumber, secondNumber, result});\n\t}\n\tcheck = (e) => {\n\t\tif(parseInt(e.target.value) === this.state.result) {\n\t\t\tthis.setState({good: true});\n\t\t\tconsole.log(\"Brawo!!\");\n\t\t\tsetTimeout(() => {\n\t\t\t\tdocument.getElementById('input').value = '';\n\t\t\t\tthis.setState({good: false});\n\t\t\t\tthis.randomNumbers();\n\t\t\t}, 800)\n\t\t}\n\t}\n\trender() {\n\t\tconst Animation = styled.div`\n\t\t\tdisplay: none;\n\t\t\tposition: absolute;\n\t\t\ttop: 50%;\n\t\t\tleft: 50%;\n\t\t\ttransform: translate(-50%, -50%);\n\t\t\twidth: 50vmin;\n\t\t\theight: 50vmin;\n\t\t\tmax-width: 250px;\n\t\t\t/* max-height: calc(100vh - 336px); */\n\t\t\t@media(min-height: 500px) {\n\t\t\t\t${props =>\n\t\t\t\t\tprops.preview &&\n\t\t\t\t\tcss`\n\t\t\t\t\t\tdisplay: block;\n\t\t\t\t\t`\n\t\t\t\t};\n\t\t\t}\n\t\t`\n\t\treturn (\n\t\t\t<CalcAppComponent>\n\t\t\t\t<PointsElement>Punkty: <Points>13</Points></PointsElement>\n\t\t\t\t<Equation>\n\t\t\t\t\t<Number>{this.state.firstNumber}</Number>\n\t\t\t\t\t<Sign>{this.state.sign}</Sign>\n\t\t\t\t\t<Number>{!this.state.secondNumber ? '' : this.state.secondNumber.toString().replace(/-[0-9]+/g, x => `(${x})`)}</Number>\n\t\t\t\t\t<Sign>=</Sign>\n\t\t\t\t\t<Input id=\"input\" onChange={this.check} type=\"number\" />\n\t\t\t\t</Equation>\n\t\t\t\t<div>\n\t\t\t\t\t<Number>{this.state.result}</Number>\n\t\t\t\t\t<button onClick={this.randomNumbers}>choose</button>\n\t\t\t\t</div>\n\t\t\t\t<Reward preview={this.state.good}/>\n\t\t\t\t{/* <Animation preview={this.state.good}>\n\t\t\t\t\t<Lottie\n\t\t\t\t\t\tspeed={30}\n\t\t\t\t\t\toptions={{\n\t\t\t\t\t\tloop: false,\n\t\t\t\t\t\tautoplay: true,\n\t\t\t\t\t\tanimationData: rewardAnimation,\n\t\t\t\t\t\trendererSettings: {\n\t\t\t\t\t\t\tpreserveAspectRadio: 'xMidYMid slice'\n\t\t\t\t\t\t}}}\n\t\t\t\t\t/>\n\t\t\t\t</Animation> */}\n\t\t\t</CalcAppComponent>\n\t\t);\n\t}\n}\n\nexport default CalcApp"],"sourceRoot":""}